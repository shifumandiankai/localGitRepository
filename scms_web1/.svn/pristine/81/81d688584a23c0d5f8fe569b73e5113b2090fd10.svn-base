package com.wadejerry.scms.modules.log.controller;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.codehaus.jettison.json.JSONException;
import org.codehaus.jettison.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.wadejerry.scms.frame.constant.ConstParamLog;
import com.wadejerry.scms.frame.entity.DataTableDto;
import com.wadejerry.scms.frame.entity.PageParamsDto;
import com.wadejerry.scms.frame.entity.SelectDataDto;
import com.wadejerry.scms.modules.auth.dto.UserDto;
import com.wadejerry.scms.modules.auth.service.BimUserService;
import com.wadejerry.scms.modules.log.dto.ConfigurationLogDto;
import com.wadejerry.scms.modules.log.service.ConfigurationLogService;
import com.wadejerry.scms.modules.pfm.dto.ParkingLotDto;
import com.wadejerry.scms.utils.AjaxUtil;
import com.wadejerry.scms.utils.date.DateUtil;

@Controller
public class ConfigurationLogController {
	@Autowired
	private HttpServletResponse response;
	@Autowired
	private HttpServletRequest request;
	@Autowired 
	private ConfigurationLogService ConfigurationService;
	@Autowired
	private BimUserService bimUserService; // 用户Service
	
	
	
	@RequestMapping("/log/selectAllInfo.do")
	@ResponseBody
	public void GetConfigurationLogInfo() throws JSONException, ParseException{
		PageParamsDto paramsDto = new PageParamsDto(request); // 获取分 页参数
		Date startTime=null;
		Date endTime=null;
		String val=request.getParameter("columns[0][search][value]");
		if(!val.equals("")){
			JSONObject json=new JSONObject(val);
			if(json.has("startTime")&&!json.getString("startTime").equals("")){
				startTime=DateUtil.df.parse(json.getString("startTime").toString());
				paramsDto.setDateValue1(startTime);
			}
			if(json.has("endTime")&&!json.getString("endTime").equals("")){
				endTime=DateUtil.df.parse(json.getString("endTime").toString());
				paramsDto.setDateValue2(endTime);
			}
			if(json.has("SystemCode")&&!json.getString("SystemCode").equals("0")){
				paramsDto.setIntValue4(Integer.valueOf(json.getString("SystemCode").toString()));
			}
			if(json.has("user")&&!json.getString("user").equals("0")){
				paramsDto.setIntValue5(Integer.valueOf(json.getString("user").toString()));
			}
			
		}
		int iTotal =0;
		List<ConfigurationLogDto> listDto=null;
		iTotal=ConfigurationService.getRecordTotal(paramsDto);
		if (iTotal > 0) {
			//有数据存在
			if (paramsDto.getLength() == -1) { // 查询所有记录
				paramsDto.setLength(iTotal);
			}
			listDto = ConfigurationService.getConfigurationLogByPage(paramsDto); // 获取分页记录
			
		}
		DataTableDto data = new DataTableDto(); // 返回数据封装
		data.setDataList(listDto);
		data.setDraw(paramsDto.getDraw());
		data.setRecordsFiltered(iTotal);
		data.setRecordsTotal(iTotal);
		AjaxUtil.ajaxWriteDataTable(data, response);
	}
	
	/*
	 *  配置类型
	 */
	@RequestMapping("/log/ConfigSystemCode.do")
	@ResponseBody
	public void ConfigSystemCode(){
		 Map<Integer,String> map=ConstParamLog.systemIdAndStrNameMap;
		 List<SelectDataDto> list = new ArrayList<SelectDataDto>();
		 SelectDataDto selectInit= new SelectDataDto();
		 selectInit.setId(0);
		 selectInit.setText("全部");
		 list.add(selectInit);
		 SelectDataDto select= null;
		 if(map.size()>0){
			 //select=new SelectDataDto();
			for(Entry<Integer,String> entry:map.entrySet()){
				select=new SelectDataDto();
				select.setId(entry.getKey());
				select.setText(entry.getValue());
				list.add(select);
			}
		 }
		 AjaxUtil.ajaxWriteObject(list, response);
	}
	
	/*
	 * 用户
	 */
	@RequestMapping("/log/ConfigUser.do")
	@ResponseBody
	public void ConfigUser(){
		 List<UserDto> listUser=bimUserService.selectInfo();
		 List<SelectDataDto> list = new ArrayList<SelectDataDto>();
		 SelectDataDto selectInit= new SelectDataDto();
		 selectInit.setId(0);
		 selectInit.setText("全部");
		 list.add(selectInit);
		 SelectDataDto select= null;
		 if(listUser.size()>0){
			 //select=new SelectDataDto();
			for(UserDto temp:listUser){
				select=new SelectDataDto();
				select.setId(temp.getBimUserId());
				select.setText(temp.getUserName());
				list.add(select);
			}
		 }
		 AjaxUtil.ajaxWriteObject(list, response);
	}
	
	/*
	 * 点击查询功能
	 */
	@RequestMapping("/log/Select.do")
	@ResponseBody
	public void Select(){
		
		
	}
}
