
/**
 * PfmWebServiceCallbackHandler.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.2  Built on : Apr 17, 2012 (05:33:49 IST)
 */

    package com.wadejerry.scms.webservice.client;

    /**
     *  PfmWebServiceCallbackHandler Callback class, Users can extend this class and implement
     *  their own receiveResult and receiveError methods.
     */
    public abstract class PfmWebServiceCallbackHandler{



    protected Object clientData;

    /**
    * User can pass in any object that needs to be accessed once the NonBlocking
    * Web service call is finished and appropriate method of this CallBack is called.
    * @param clientData Object mechanism by which the user can pass in user data
    * that will be avilable at the time this callback is called.
    */
    public PfmWebServiceCallbackHandler(Object clientData){
        this.clientData = clientData;
    }

    /**
    * Please use this constructor if you don't want to set any clientData
    */
    public PfmWebServiceCallbackHandler(){
        this.clientData = null;
    }

    /**
     * Get the client data
     */

     public Object getClientData() {
        return clientData;
     }

        
           /**
            * auto generated Axis2 call back method for remoteConfiguration method
            * override this method for handling normal response from remoteConfiguration operation
            */
           public void receiveResultremoteConfiguration(
                    org.tempuri.RemoteConfigurationResponse result
                        ) {
           }

          /**
           * auto generated Axis2 Error handler
           * override this method for handling error response from remoteConfiguration operation
           */
            public void receiveErrorremoteConfiguration(java.lang.Exception e) {
            }
                
           /**
            * auto generated Axis2 call back method for calibratingTime method
            * override this method for handling normal response from calibratingTime operation
            */
           public void receiveResultcalibratingTime(
                    org.tempuri.CalibratingTimeResponse result
                        ) {
           }

          /**
           * auto generated Axis2 Error handler
           * override this method for handling error response from calibratingTime operation
           */
            public void receiveErrorcalibratingTime(java.lang.Exception e) {
            }
                
           /**
            * auto generated Axis2 call back method for remoteRestart method
            * override this method for handling normal response from remoteRestart operation
            */
           public void receiveResultremoteRestart(
                    org.tempuri.RemoteRestartResponse result
                        ) {
           }

          /**
           * auto generated Axis2 Error handler
           * override this method for handling error response from remoteRestart operation
           */
            public void receiveErrorremoteRestart(java.lang.Exception e) {
            }
                
           /**
            * auto generated Axis2 call back method for registerDevice method
            * override this method for handling normal response from registerDevice operation
            */
           public void receiveResultregisterDevice(
                    org.tempuri.RegisterDeviceResponse result
                        ) {
           }

          /**
           * auto generated Axis2 Error handler
           * override this method for handling error response from registerDevice operation
           */
            public void receiveErrorregisterDevice(java.lang.Exception e) {
            }
                
           /**
            * auto generated Axis2 call back method for grtDeviceParamsById method
            * override this method for handling normal response from grtDeviceParamsById operation
            */
           public void receiveResultgrtDeviceParamsById(
                    org.tempuri.GrtDeviceParamsByIdResponse result
                        ) {
           }

          /**
           * auto generated Axis2 Error handler
           * override this method for handling error response from grtDeviceParamsById operation
           */
            public void receiveErrorgrtDeviceParamsById(java.lang.Exception e) {
            }
                


    }
    