package com.wadejerry.scms.frame.Authority;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.wadejerry.scms.frame.entity.LoginInfo;
import com.wadejerry.scms.modules.auth.dao.BimUserMapper;
import com.wadejerry.scms.modules.auth.dao.BimUserRoleMapper;
import com.wadejerry.scms.modules.auth.dto.UserRoleRelDto;
import com.wadejerry.scms.modules.auth.model.BimUser;
@Component("authorityGetter")
public class AuthorityGetter {
	@Autowired
	private  BimUserRoleMapper bimUserRoleMapper;
	@Autowired
	private  BimUserMapper userMapper;
	/**
	 * 查询车辆权限
	 * @return
	 * 如果是企业管理员，返回null,其他人员返回integer集合
	 */
	public  List<Integer> carTypeAuth(){
		List<Integer> carTypeIds = null;
		if(LoginInfo.isCompanyManager()){
			
		}else{
			
		List<UserRoleRelDto> userroles=	bimUserRoleMapper.selectUserRoleDtoByUserId(LoginInfo.getLoginId());
		carTypeIds =new ArrayList();
		for(UserRoleRelDto temp:userroles){
			BimUser user = userMapper.selectByPrimaryKey(temp.getRoleId());
			if(user!=null){
				if(user.getCustom3()!=null&&user.getCustom3().length()!=0){
					List<String> list=Arrays.asList(user.getCustom3().split(","));
					for(String temp1:list){
						carTypeIds.add(Integer.parseInt(temp1));
					}
				}
			}

		}
		}
		return carTypeIds;
	}
	/**
	 * 查询出入口权限
	 * @return
	 * 如果是企业管理员，返回null,其他人员返回integer集合
	 */

	public  List<Integer> churuKouAuth(){
		
		List<Integer> entrances =  null;
		if(LoginInfo.isCompanyManager()){
			
		}else{
		 List<UserRoleRelDto> userroles=	bimUserRoleMapper.selectUserRoleDtoByUserId(LoginInfo.getLoginId());
		 entrances =new ArrayList();
			for(UserRoleRelDto temp:userroles){
				BimUser user = userMapper.selectByPrimaryKey(temp.getRoleId());
				if(user!=null){
					if(user.getCustom4()!=null&&user.getCustom4().length()!=0){
						List<String> list=Arrays.asList(user.getCustom4().split(","));
						for(String temp1:list){
							temp1=temp1.substring(1);
							entrances.add(Integer.parseInt(temp1));
						}
					}
				}

			}
		}
			return entrances;
	} 
}
